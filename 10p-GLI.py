#!./venv/bin/python

"""
Author: HarryZ
Created: 2023-11-04
Updated: 2024-01-07
Calulate the integral of a function using 5-point Gaussian-Legendre quadrature
"""

import numpy as np


####### 10-point G-L quadrature #######

abscissa_10 = [
    -0.9739065285,
    -0.8650633667,
    -0.6794095683,
    -0.4333953941,
    -0.1488743390,
    0.1488743390,
    0.4333953941,
    0.6794095683,
    0.8650633667,
    0.9739065285
]

weight_10 = [
    0.0666713443,
    0.1494513492,
    0.2190863625,
    0.2692667193,
    0.2955242247,
    0.2955242247,
    0.2692667193,
    0.2190863625,
    0.1494513492,
    0.0666713443
]


# 第一种取点
# lambda_min = 0
# lambda_max = 632.026
# lambda_list_10 = [(lambda_max - lambda_min) / 2 * i +
#                   (lambda_max + lambda_min) / 2 for i in abscissa_10]
# print(lambda_list_10)

lambda_list_10 = [
    8.245876209129506,
    42.64173029903293,
    101.31074409281209,
    179.0544213242767,
    268.966773509593,
    363.05922649040696,
    452.97157867572326,
    530.7152559071878,
    589.384269700967,
    623.7801237908704
]

msd_list_10 = [
    0.02828968,
    0.014892430000000002,
    0.00893665875,
    0.006000732857142857,
    0.004458153,
    0.0036156219999999998,
    0.0033315779999999995,
    0.002710582222222222,
    0.00243155,
    0.002279007
]


# 第二种取点
# lambda_min = np.log(lambda_min + np.e ** 3.5)
# lambda_max = np.log(lambda_max + np.e ** 3.5)

# tmp = [(lambda_max - lambda_min) / 2 * i +
#                   (lambda_max + lambda_min) / 2 for i in abscissa_10]
# lambda_list_10 = [np.e ** i - np.e ** 3.5 for i in tmp]
# print(lambda_list_10)

# lambda_list_10 = [
#     1.3218454386828071,
#     7.429242462300721,
#     20.448998156279607,
#     44.35579276774375,
#     85.59512159890338,
#     152.4321293389935,
#     251.20242463993492,
#     378.0986975526874,
#     510.1482256352902,
#     606.495129089744
# ]

# msd_list_10 = [
#     0.01578057,
#     0.01432284,
#     0.01235923,
#     0.010193832,
#     0.007798953,
#     0.005867822222222222,
#     0.0044907589999999995,
#     0.003321473999999999,
#     0.0028562979999999997,
#     0.0022987430000000002
# ]

res = 0.0
for i in range(10):
    print(msd_list_10[i] * (lambda_list_10[i] + np.e ** 3.5))
    res += weight_10[i] * msd_list_10[i] * (lambda_list_10[i] + np.e ** 3.5)

print(-res)
